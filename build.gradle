buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.h2database:h2:1.4.196'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.flywaydb.flyway'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

configurations {
    domaGenRuntime
}

repositories {
	mavenCentral()
    maven {url 'https://oss.sonatype.org/content/repositories/snapshots/'}
}

// doma利用のための設定
// JavaクラスとSQLファイルの出力先ディレクトリを同じにする
processResources.destinationDir = compileJava.destinationDir
// コンパイルより前にSQLファイルを出力先ディレクトリにコピーするために依存関係を逆転する
compileJava.dependsOn processResources
// compileJava.options.compilerArgs = ['-Adoma.dao.subpackage=impl', '-Adoma.dao.suffix=Impl']

dependencies {
	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.seasar.doma.boot:doma-spring-boot-starter:1.1.0')
	compile group: 'org.seasar.doma', name: 'doma', version: '2.16.1'
	
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'

	// doma-gen
    domaGenRuntime 'org.seasar.doma:doma-gen:2.16.1'
    domaGenRuntime 'com.h2database:h2'
}

task rundb << {
	'h2'.execute()
}

flyway {
    user = 'sa'
    //url = 'jdbc:h2:./dummy' // Embedded
    url = 'jdbc:h2:tcp://localhost/~/dummy' // c/s
}

flywayMigrate.dependsOn rundb

// doma-gen
task gen << {
    ant.taskdef(resource: 'domagentask.properties',
        classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: 'jdbc:h2:tcp://localhost/~/dummy', user: 'sa', password: '', ignoredTableNamePattern:'schema_version',templatePrimaryDir: 'doma-gen/template') {
        entityConfig(packageName:'com.example.domain.repository.entity', overwrite: 'true')
        daoConfig(
         packageName:'com.example.domain.repository.dao',
         configClassName: 'com.example.DomaConfig',
         overwrite: 'true')
        sqlConfig()
    }
}
gen.dependsOn flywayMigrate


// doma-gen
task genTestCases << {
    ant.taskdef(resource: 'domagentask.properties',
        classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: 'jdbc:h2:tcp://localhost/~/dummy', user: 'sa', password: '') {
        sqlTestCaseConfig {
            fileset(dir: 'src/main/resources') {
                include(name: 'META-INF/**/*.sql')
            }
        }
    }
}
genTestCases.dependsOn flywayMigrate
